//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASliceOfColumbia.Web.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ASliceOfColumbiaEntities : DbContext
    {
        public ASliceOfColumbiaEntities()
            : base("name=ASliceOfColumbiaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DeviceType> DeviceTypes { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<NearByRequest1> NearByRequest1 { get; set; }
    
        public virtual ObjectResult<REPORT_getRequestLocationsSP_Result> REPORT_getRequestLocationsSP(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REPORT_getRequestLocationsSP_Result>("REPORT_getRequestLocationsSP", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<REPORT_getRequestLocationsToClosestLocationSP_Result1> REPORT_getRequestLocationsToClosestLocationSP(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REPORT_getRequestLocationsToClosestLocationSP_Result1>("REPORT_getRequestLocationsToClosestLocationSP", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<WEBAPI_getNearByLocationsSP_Result> WEBAPI_getNearByLocationsSP(System.Data.Entity.Spatial.DbGeography spatialLocation, Nullable<int> deviceTypeID, Nullable<int> sRID)
        {
            var spatialLocationParameter = spatialLocation != null ?
                new ObjectParameter("spatialLocation", spatialLocation) :
                new ObjectParameter("spatialLocation", typeof(System.Data.Entity.Spatial.DbGeography));
    
            var deviceTypeIDParameter = deviceTypeID.HasValue ?
                new ObjectParameter("DeviceTypeID", deviceTypeID) :
                new ObjectParameter("DeviceTypeID", typeof(int));
    
            var sRIDParameter = sRID.HasValue ?
                new ObjectParameter("SRID", sRID) :
                new ObjectParameter("SRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WEBAPI_getNearByLocationsSP_Result>("WEBAPI_getNearByLocationsSP", spatialLocationParameter, deviceTypeIDParameter, sRIDParameter);
        }
    }
}
